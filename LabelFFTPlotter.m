close all
clear

% FOLDER PATH NAMES
grid5x5_1_1 = 'Excel Sheets/5by5_trimic_1.xlsx';
grid5x5_1_2 = 'Excel Sheets/5by5_trimic_2.xlsx';
grid5x5_1_3 = 'Excel Sheets/5by5_trimic_3.xlsx';

varobj2_1 = 'Excel Sheets/miscobj2_1.xlsx';
varobj2_2 = 'Excel Sheets/miscobj2_2.xlsx';
varobj2_3 = 'Excel Sheets/miscobj2_3.xlsx';

force_1 = 'Excel Sheets/trimic1_force_1.xlsx';
force_2 = 'Excel Sheets/trimic1_force_2.xlsx';
force_3 = 'Excel Sheets/trimic1_force_3.xlsx';

BGwhite_vol1_1 = 'Excel Sheets/BGwhite_vol1_1';
BGwhite_vol1_2 = 'Excel Sheets/BGwhite_vol1_2';
BGwhite_vol1_3 = 'Excel Sheets/BGwhite_vol1_3';
BGwhite_vol2_1 = 'Excel Sheets/BGwhite_vol2_1';
BGwhite_vol2_2 = 'Excel Sheets/BGwhite_vol2_2';
BGwhite_vol2_3 = 'Excel Sheets/BGwhite_vol2_3';
BGwhite_vol3_1 = 'Excel Sheets/BGwhite_vol3_1';
BGwhite_vol3_2 = 'Excel Sheets/BGwhite_vol3_2';
BGwhite_vol3_3 = 'Excel Sheets/BGwhite_vol3_3';

BGwhite_vol1 = {BGwhite_vol1_1, BGwhite_vol1_2, BGwhite_vol1_3};
BGwhite_vol2 = {BGwhite_vol2_1, BGwhite_vol2_2, BGwhite_vol2_3};
BGwhite_vol3 = {BGwhite_vol3_1, BGwhite_vol3_2, BGwhite_vol3_3};

BGwhite_mic1 = {BGwhite_vol1_1, BGwhite_vol2_1, BGwhite_vol3_1};
BGwhite_mic2 = {BGwhite_vol1_2, BGwhite_vol2_2, BGwhite_vol3_2};
BGwhite_mic3 = {BGwhite_vol1_3, BGwhite_vol2_3, BGwhite_vol3_3};

% CONSTANTS
pulseNum = 10; % Number of pulses extracted from each file
fileNum = 10; % Number of files for each label
labelNum = 9; % Number of data points from the grid in experiment
micNum = 3;
figDims = [3 3];

% SWITCHES
plotLabelFirst = true;
plotMean = false;
plotFileMean = true;
doingSubplots = true;
fileName = grid5x5_1_1;
fileNames = BGwhite_mic3;
% {force_1, force_2, force_3};
%{varobj2_1, varobj2_2, varobj2_3};
% {grid5x5_1_1; grid5x5_1_2; grid5x5_1_3};

% PROCESSING BEGINS
cmap = colormap('hsv');
close all % Close the figure that gets automatically generated by colormap command

for k = 1:micNum
    fileName = fileNames{k};
    if (plotLabelFirst == false)
        figure
    end
    micData = readmatrix(fileName);

    % Prepare for custom legend
    if (plotLabelFirst == true)
        plotColors = zeros(micNum, 3);
        colorHeight = micNum;
    else
        plotColors = zeros(labelNum, 3);
        colorHeight = labelNum;
    end

    % Create colormap for different plots
    for i = 1:colorHeight
        plotColors(i,:) = cmap(round(i * height(cmap)/colorHeight),:);
        hold on; plot(NaN, NaN, 'Color', plotColors(i,:), 'LineWidth', 2); % Invisible plots for legend
    end

    % Iterate through the distances
    for i = 1:labelNum
        if (doingSubplots == true)
            subplot(figDims(1), figDims(2), i)
            title(i)
            ylim([30 110])

            for p = 1:colorHeight
                plotColors(p,:) = cmap(round(p * height(cmap)/colorHeight),:);
                hold on; plot(NaN, NaN, 'Color', plotColors(p,:), 'LineWidth', 2); % Invisible plots for legend
            end
        end

        % Extract all pulses for a certain label
        dataBlockLen = pulseNum * fileNum;
        dataBlockIndBeg = (i-1) * dataBlockLen  + 1;
        dataBlockIndEnd = dataBlockIndBeg + dataBlockLen - 1;

        dataBlock = micData(dataBlockIndBeg:dataBlockIndEnd,:);

        hold on
        if (plotMean == true) % Mean of all pulses for the label
            g = plot(mean(dataBlock, 1), 'Color', plotColors(k,:));
        elseif (plotFileMean == true) % Mean of each trial (every group of pulses per trial)
            for j = 1:fileNum
                pulseBlockIndBeg = (j-1) * pulseNum  + 1;
                pulseBlockIndEnd = pulseBlockIndBeg + pulseNum - 1;
                pulseBlock = dataBlock(pulseBlockIndBeg:pulseBlockIndEnd,:);
                hold on; g = plot(mean(pulseBlock, 1));

                if (plotLabelFirst == true)
                    g.Color = plotColors(k,:);
                else
                    g.Color = plotColors(i,:);
                end
            end
        else % Plot all pulses
            g = plot(dataBlock.', 'Color', plotColors(k,:));
        end
    end

    % Create legend based on the colormap
    if (doingSubplots == false)
        legendStrings = "Distance = " + string(1:1:labelNum);
        legend(legendStrings)
    end

    if (plotLabelFirst == true)
        legendStrings = "Volume: " + string(1:1:micNum);
        legend(legendStrings);
    end

    ylim([30 110])
end
